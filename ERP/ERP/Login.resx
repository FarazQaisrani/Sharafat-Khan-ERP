<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>